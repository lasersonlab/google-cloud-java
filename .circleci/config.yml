version: 2.0

anchor_build: &anchor_build
  name: Build
  command: mvn -B -DtrimStackTrace=false -fae --quiet -DskipTests install

anchor_unittest: &anchor_unittest
  name: Run unit tests
  command: mvn -B -DtrimStackTrace=false -fae --quiet -DskipITs install -P release

anchor_docker: &anchor_docker
  docker:
    - image: circleci/openjdk:8-jdk
      environment:
        TERM: dumb

anchor_auth_vars: &anchor_auth_vars
  environment:
    GCLOUD_PROJECT: gcloud-devel
    GOOGLE_APPLICATION_CREDENTIALS: .circleci/it-service-account.json

anchor_run_decrypt: &anchor_run_decrypt
  name: Decrypt credentials
  command: |
    openssl aes-256-cbc -md sha256 -d -in .circleci/it-service-account.json.enc \
        -out .circleci/it-service-account.json -k "${SYSTEM_TESTS_ENCRYPTION_KEY}"

jobs:
  openjdk_7:
    working_directory: ~/googleapis
    docker:
      - image: maven:3.5.2-jdk-7
        environment:
          TERM: dumb
          MAVEN_OPTS: -Xmx1024m
    steps:
      - checkout
      - run:
          <<: *anchor_build
      - run:
          <<: *anchor_unittest
  openjdk_8:
    working_directory: ~/googleapis
    docker:
      - image: circleci/openjdk:8-jdk
        environment:
          TERM: dumb
          MAVEN_OPTS: -Xmx256m
    steps:
      - checkout
      - run:
          <<: *anchor_build
      - run:
          <<: *anchor_unittest
  mac_openjdk_8:
    working_directory: ~/googleapis
    docker:
      - image: circleci/openjdk:8-jdk
        environment:
          TERM: dumb
          MAVEN_OPTS: -Xmx256m
    macos:
      xcode: "9.2.0"
    steps:
      - checkout
      - run:
          <<: *anchor_build
      - run:
          <<: *anchor_unittest

  bigquery_it:
    working_directory: ~/googleapis
    <<: *anchor_docker
    <<: *anchor_auth_vars
    steps:
      - checkout
      - run:
          <<: *anchor_run_decrypt
      - run:
          name: Run integration tests for google-cloud-bigquery
          command: ./utilities/verify_single_it.sh google-cloud-clients/google-cloud-bigquery

  bigtable_it:
    working_directory: ~/googleapis
    <<: *anchor_docker
    <<: *anchor_auth_vars
    steps:
      - checkout
      - run:
          <<: *anchor_run_decrypt
      - run:
          name: Run integration tests for google-cloud-bigtable
          command: ./utilities/verify_single_it.sh google-cloud-clients/google-cloud-bigtable -Dbigtable.env=prod -Dbigtable.table=projects/gcloud-devel/instances/google-cloud-bigtable/tables/integration-tests

  bigtableadmin_it:
    working_directory: ~/googleapis
    <<: *anchor_docker
    <<: *anchor_auth_vars
    steps:
      - checkout
      - run:
          <<: *anchor_run_decrypt
      - run:
          name: Run integration tests for google-cloud-bigtable-admin
          command: ./utilities/verify_single_it.sh google-cloud-clients/google-cloud-bigtable-admin -Dbigtable.instance=projects/gcloud-devel/instances/google-cloud-bigtable

  compute_it:
    working_directory: ~/googleapis
    <<: *anchor_docker
    <<: *anchor_auth_vars
    steps:
      - checkout
      - run:
          <<: *anchor_run_decrypt
      - run:
          name: Run integration tests for google-cloud-compute
          command: ./utilities/verify_single_it.sh google-cloud-clients/google-cloud-compute
          no_output_timeout: 20m
  datastore_it:
    working_directory: ~/googleapis
    <<: *anchor_docker
    <<: *anchor_auth_vars
    steps:
      - checkout
      - run:
          <<: *anchor_run_decrypt
      - run:
          name: Run integration tests for google-cloud-datastore
          command: ./utilities/verify_single_it.sh google-cloud-clients/google-cloud-datastore
  dns_it:
    working_directory: ~/googleapis
    <<: *anchor_docker
    <<: *anchor_auth_vars
    steps:
      - checkout
      - run:
          <<: *anchor_run_decrypt
      - run:
          name: Run integration tests for google-cloud-dns
          command: ./utilities/verify_single_it.sh google-cloud-clients/google-cloud-dns
  firestore_it:
    working_directory: ~/googleapis
    <<: *anchor_docker
    environment:
      # Firestore can't be turned on in a project with Datastore turned on,
      # so we use a distinct project (and distinct service account) for it
      GCLOUD_PROJECT: java-review
      GOOGLE_APPLICATION_CREDENTIALS: .circleci/firestore-it-service-account.json
    steps:
      - checkout
      - run:
          name: Decrypt credentials
          command: |
            openssl aes-256-cbc -md sha256 -d -in .circleci/firestore-it-service-account.json.enc \
                -out .circleci/firestore-it-service-account.json -k "${SYSTEM_TESTS_ENCRYPTION_KEY}"
      - run:
          name: Run integration tests for google-cloud-firestore
          command: ./utilities/verify_single_it.sh google-cloud-clients/google-cloud-firestore
  logging_it:
    working_directory: ~/googleapis
    <<: *anchor_docker
    <<: *anchor_auth_vars
    steps:
      - checkout
      - run:
          <<: *anchor_run_decrypt
      - run:
          name: Run integration tests for google-cloud-logging
          command: ./utilities/verify_single_it.sh google-cloud-clients/google-cloud-logging
  notification_it:
    working_directory: ~/googleapis
    <<: *anchor_docker
    <<: *anchor_auth_vars
    steps:
      - checkout
      - run:
          <<: *anchor_run_decrypt
      - run:
          name: Run integration tests for google-cloud-notification
          command: ./utilities/verify_single_it.sh google-cloud-clients/google-cloud-notification
  pubsub_it:
    working_directory: ~/googleapis
    <<: *anchor_docker
    <<: *anchor_auth_vars
    steps:
      - checkout
      - run:
          <<: *anchor_run_decrypt
      - run:
          name: Run integration tests for google-cloud-pubsub
          command: ./utilities/verify_single_it.sh google-cloud-clients/google-cloud-pubsub
  spanner_it:
    working_directory: ~/googleapis
    <<: *anchor_docker
    <<: *anchor_auth_vars
    steps:
      - checkout
      - run:
          <<: *anchor_run_decrypt
      - run:
          name: Run integration tests for google-cloud-spanner
          command: ./utilities/verify_single_it.sh google-cloud-clients/google-cloud-spanner
  speech_it:
    working_directory: ~/googleapis
    <<: *anchor_docker
    <<: *anchor_auth_vars
    steps:
      - checkout
      - run:
          <<: *anchor_run_decrypt
      - run:
          name: Run integration tests for google-cloud-speech
          command: ./utilities/verify_single_it.sh google-cloud-clients/google-cloud-speech
  storage_it:
    working_directory: ~/googleapis
    <<: *anchor_docker
    <<: *anchor_auth_vars
    steps:
      - checkout
      - run:
          <<: *anchor_run_decrypt
      - run:
          name: Run integration tests for google-cloud-storage
          command: ./utilities/verify_single_it.sh google-cloud-clients/google-cloud-storage
  translate_it:
    working_directory: ~/googleapis
    <<: *anchor_docker
    <<: *anchor_auth_vars
    steps:
      - checkout
      - run:
          <<: *anchor_run_decrypt
      - run:
          name: Run integration tests for google-cloud-translate
          command: ./utilities/verify_single_it.sh google-cloud-clients/google-cloud-translate
  javadoc_test:
    working_directory: ~/googleapis
    <<: *anchor_docker
    steps:
      - checkout
      - run:
          <<: *anchor_build
      - run:
          name: Run mvn javadoc goal
          command: mvn javadoc:javadoc javadoc:test-javadoc

workflows:
  version: 2
  build:
    jobs:
      - openjdk_7
      - openjdk_8
      - mac_openjdk_8
      - javadoc_test
      - bigquery_it:
          filters:
            branches:
              only: master
      - bigtable_it:
          filters:
            branches:
              only: master
      - compute_it:
          filters:
            branches:
              only: master
      - datastore_it:
          filters:
            branches:
              only: master
      - firestore_it:
          filters:
            branches:
              only: master
      - dns_it:
          filters:
            branches:
              only: master
      - logging_it:
          filters:
            branches:
              only: master
      - notification_it:
          filters:
            branches:
              only: master
      - pubsub_it:
          filters:
            branches:
              only: master
      - spanner_it:
          filters:
            branches:
              only: master
      - speech_it:
          filters:
            branches:
              only: master
      - storage_it:
          filters:
            branches:
              only: master
      - translate_it:
          filters:
            branches:
              only: master
